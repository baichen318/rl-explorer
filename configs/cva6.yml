# Author: baichen318@gmail.com

# Constraint
# 1. fetchWidth >= decodeWidth
# 2. numIntPhysRegisters >= (32 + decodeWidth)
# 3. numFPPhysRegisters >= (32 + decodeWidth)
# 4. numRobEntries % decodeWidth == 0
# 5. numFetchBufferEntries % decodeWidth = 0
# 6. fetchWidth * 2 = icache.fetchBytes
# 7. decodeWidth == int_dispatchWidth
# 8. decodeWidth == int_issueWidth
# 9. decodeWidth == mem_dispatchWidth
# 10. decodeWidth == fp_dispatchWidth
# 11. numLdqEntries == numStqEntries
# 12. numFetchBufferEntries > fetchWidth

basic-component:
  btb: [
      # nRAS BTBParams.nEntries BHTParams.nEntries
      [0, 0, 0],
      [4, 16, 16],
      [3, 14, 256],
      [12, 56, 1024],
      [8, 32, 512],
      [6, 28, 512],
      [8, 32, 32],
      [8, 64, 64],
      [4, 32, 32],
      [10, 30, 512]
  ]
  icache: [
      # nSets nWays nTLBSets nTLBWays
      [64, 4, 1, 32],
      [64, 4, 2, 16],
      [64, 4, 1, 16],
      [64, 4, 4, 16],
      [64, 4, 2, 32],
      [64, 4, 4, 32],
      [32, 2, 1, 32],
      [32, 2, 2, 16],
      [32, 2, 1, 16],
      [32, 2, 4, 16],
      [32, 2, 2, 32],
      [32, 2, 4, 32]
  ]
  dcache: [
      # nSets nWays nTLBSets nTLBWasys nMSHRs
      [64, 4, 1, 32, 1],
      [64, 4, 1, 16, 1],
      [64, 4, 2, 16, 1],
      [64, 4, 4, 16, 1],
      [64, 4, 4, 32, 1],
      [64, 4, 1, 32, 2],
      [64, 4, 1, 16, 2],
      [64, 4, 2, 16, 2],
      [64, 4, 4, 16, 2],
      [64, 4, 4, 32, 2],
      [32, 2, 1, 32, 4],
      [32, 2, 1, 16, 4],
      [32, 2, 2, 16, 4],
      [32, 2, 4, 16, 4],
      [32, 2, 4, 32, 4],
      [32, 2, 1, 32, 1],
      [32, 2, 1, 16, 1],
      [32, 2, 2, 16, 1],
      [32, 2, 4, 16, 1],
      [32, 2, 4, 32, 1],
      [64, 4, 1, 32, 2],
      [64, 4, 1, 16, 2],
      [64, 4, 2, 16, 2],
      [64, 4, 4, 16, 2],
      [64, 4, 4, 32, 2],
      [64, 4, 1, 32, 4],
      [64, 4, 1, 16, 4],
      [64, 4, 2, 16, 4],
      [64, 4, 4, 16, 4],
      [64, 4, 4, 32, 4]
  ]
  mul-unroll: [
      # mulUnroll
      1,
      4,
      8
  ]

# Design space
design-space:
  bpd:
    start: 0
    end: 9
    stride: 1
  dcache:
    start: 0
    end: 29
    stride: 1
  icache:
    start: 0
    end: 9
    stride: 1
  mul-div:
    start: 0
    end: 2
    stride: 1

# benchmarks
benchmarks:
  - median
  # - qsort
  # - rsort
  - towers
  - vvadd
  - multiply
  # - dhrystone
  # - spmv
  # mt-vvadd
  # mt-matmul

# mode: sample-generate-design | generate-design | generate-dataset | rl
mode: sample-generate-design

# design: boom | rocket | cva6
design: cva6

batch: 1000

# generate-design: design-output-path
design-output-path: data/cva6/cva6-design.txt

# sim: idx
idx: 1

# generate-data: data-output-path
dataset-output-path: data/cva6/dataset-v1.txt

# PPA related
# performance model learning rate
ipc-model-lr: 0.001
# power model learning rate
power-model-lr: 0.001
# area model learning rate
area-model-lr: 0.001
# epochs to train PPA models.
ppa-epoch: 2000
# ppa model path
ppa-model: calib-models

# Vis. related
# port
port: 5012

# RL related
# metrics:
metrics:
  - ipc
  - power
  - area
# cuda enable
cuda: False
# random seed
seed: 2021
# no. of A3C agents
num-process: 5
# discount factor for rewards
gamma: 0.99
# hidden size
hidden-size:
  - 1000
  - 500
  - 50
# no. of TD steps
n-step-td: 5
# no. of environment steps to train
num-train-step: 1000
# max. of environment steps
num-env-step: 20
# value loss coefficient
value-loss-weight: 0.1
# entropy term coefficient
entropy-weight: 0.01
# learning rate
lr: 0.0007
# RMSprop optimizer epsilon
eps: 0.00001
# RMSprop optimizer apha
alpha: 0.99
# max. norm of gradients
max-grad-norm: 0.5
# save interval, one save per n updates
save-interval: 1
# eval interval, one eval per n updates
eval-interval: 500
# TODO: these flags need to be verified
batch-size: 16
# intial beta for evelope A3C
beta: 0.01
log: logs/a3c-cva6
debug: True