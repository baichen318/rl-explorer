# Author: baichen318@gmail.com

# Constraint
# 1. fetchWidth >= decodeWidth
# 2. numIntPhysRegisters >= (32 + decodeWidth)
# 3. numFPPhysRegisters >= (32 + decodeWidth)
# 4. numRobEntries % decodeWidth == 0
# 5. numFetchBufferEntries % decodeWidth = 0
# 6. fetchWidth * 2 = icache.fetchBytes
# 7. decodeWidth == int_dispatchWidth
# 8. decodeWidth == int_issueWidth
# 9. decodeWidth == mem_dispatchWidth
# 10. decodeWidth == fp_dispatchWidth
# 11. numLdqEntries == numStqEntries
# 12. numFetchBufferEntries > fetchWidth
# 13. fetchWidth = 4 when decodeWidth = 1, 2
# 14. fetchWidth = 8 when decodeWidth = 3, 4, 5

basic-component:
  registers: [
      # numIntPhysRegisters numFpPhysRegisters
      [52, 48],
      [80, 64],
      [100, 96],
      [128, 128],
      [96, 64],
      [40, 40],
      [64, 60]
  ]
  issue-unit: [
      # IQT_MEM IQT_INT IQT_FP
      [8, 8, 8],
      [12, 20, 16],
      [16, 32, 24],
      [24, 40, 32],
      [10, 14, 12],
      [14, 26, 20],
      [20, 36, 28]
  ]
  dcache: [
      # nMSHRs, nTLBWays
      [2, 8],
      [4, 16],
      [8, 32],
      [16, 48],
      [4, 8]
  ]
  lsu: [
      # numLdqEntries numStqEntries
      [8, 8],
      [16, 16],
      [24, 24],
      [32, 32],
      [40, 40],
      [20, 20]
  ]
  ifu-buffers: [
    # numFetchBufferEntries ftq.nEntries
    [8, 16],
    [16, 32],
    [24, 32],
    [32, 40],
    [40, 32],
    [30, 30],
    [45, 40]
  ]

# Design space
design-space:
  bpd:
    start: 0
    end: 2
    stride: 1
  fetchWidth:
    candidates: [4, 8]
  ifu-buffers:
    start: 0
    end: 6
    stride: 1
  maxBrCount:
    candidates: [8, 12, 16, 20]
  decodeWidth:
    start: 1
    end: 5
    stride: 1
  numRobEntries:
    candidates: [32, 64, 84, 96, 105, 120, 128, 130]
  registers:
    start: 0
    end: 6
    stride: 1
  issueEntries:
    start: 0
    end: 6
    stride: 1
  lsuEntries:
    start: 0
    end: 5
    stride: 1
  dcache:
    start: 0
    end: 4
    stride: 1

# benchmarks
benchmarks:
  - median
  - mt-vvadd
  - mt-matmul
  - towers
  # - qsort
  # - rsort
  # - vvadd
  # - multiply
  # - dhrystone
  # - spmv

# mode: generate-design | rl
mode: generate-design

# design: boom | rocket | cva6
design: boom

# generate-design: for `sample_v2` in rl-explorer/dse/env/design_space.py
batch: 200

# generate-design: design-output-path
design-output-path: data/boom/boom-design.txt

# sim: idx
idx: 1

# generate-data: data-output-path
dataset-output-path: data/boom/dataset-v1.txt

# RL related
seed: 2021
# no. of A3C agents
num-process: 5
# discount factor for rewards
gamma: 0.99
# hidden size
hidden-size:
  - 1000
  - 500
  - 50
# no. of TD steps
n-step-td: 5
# no. of environment steps to train
num-env-step: 100000
# value loss coefficient
value-loss-weight: 0.5
# entropy term coefficient
entropy-weight: 0.01
# learning rate
lr: 0.0007
# RMSprop optimizer epsilon
eps: 0.00001
# RMSprop optimizer apha
alpha: 0.99
# max. norm of gradients
max-grad-norm: 0.5
# save interval, one save per n updates
save-interval: 100
# eval interval, one eval per n updates
eval-interval: 500
# TODO: these flags need to be verified
total-step: 150
early-stopping: 100
batch-size: 16
log: logs/a3c-boom
debug: False
