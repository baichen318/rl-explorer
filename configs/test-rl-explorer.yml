# Author: baichen318@gmail.com

# Constraint
# 1. fetchWidth >= decodeWidth
# 2. numIntPhysRegisters >= (32 + decodeWidth)
# 3. numFPPhysRegisters >= (32 + decodeWidth)
# 4. numRobEntries % decodeWidth == 0
# 5. numFetchBufferEntries % decodeWidth = 0
# 6. fetchWidth * 2 = icache.fetchBytes
# 7. decodeWidth == int_dispatchWidth
# 8. decodeWidth == int_issueWidth
# 9. decodeWidth == mem_dispatchWidth
# 10. decodeWidth == fp_dispatchWidth
# 11. numLdqEntries == numStqEntries
# 12. numFetchBufferEntries > fetchWidth

basic-component:
  registers: [
      # numIntPhysRegisters numFpPhysRegisters
      [52, 48],
      [80, 64],
      [100, 96],
      [128, 128],
      [96, 64],
      [40, 40],
      [64, 60]
  ]
  issue-unit: [
      # IQT_MEM IQT_INT IQT_FP
      [8, 8, 8],
      [12, 20, 16],
      [16, 32, 24],
      [24, 40, 32],
      [10, 14, 12],
      [14, 26, 20],
      [20, 36, 28]
  ]
  dcache: [
      # nSets nWays nTLBSets nTLBWays nMSHRs
      [64, 4, 1, 8, 2],
      [64, 8, 1, 16, 4],
      [64, 8, 1, 32, 8],
      [32, 4, 1, 8, 2],
      [32, 8, 1, 16, 4],
      [32, 8, 1, 32, 8],
      [64, 4, 2, 8, 2],
      [64, 8, 2, 16, 4],
      [64, 8, 2, 32, 8]
  ]
  lsu: [
      # numLdqEntries numStqEntries
      [8, 8],
      [16, 16],
      [24, 24],
      [32, 32],
      [40, 40],
      [20, 20]
  ]
  ifu-buffers: [
    # numFetchBufferEntries ftq.nEntries
    [8, 16],
    [16, 32],
    [24, 32],
    [32, 40],
    [40, 32],
    [30, 30]
  ]

# Design space
design-space:
  bpd:
    start: 0
    end: 3
    stride: 1
  fetchWidth:
    candidates: [4, 8]
  ifu-buffers:
    start: 0
    end: 5
    stride: 1
  maxBrCount:
    candidates: [8, 12, 16, 20]
  decodeWidth:
    start: 1
    end: 5
    stride: 1
  numRobEntries:
    candidates: [32, 64, 96, 128, 130]
  registers:
    start: 0
    end: 6
    stride: 1
  issueEntries:
    start: 0
    end: 6
    stride: 1
  lsuEntries:
    start: 0
    end: 5
    stride: 1
  dcache:
    start: 0
    end: 4
    stride: 1

# benchmarks
benchmarks:
  - median
  # - qsort
  # - rsort
  - towers
  # - vvadd
  # - multiply
  - dhrystone
  # - spmv
  - mt-vvadd
  - mt-matmul

# mode: generate-design | sim | generate-data | rl
mode: rl

# generate-design: for `sample_v2` in rl-explorer/dse/env/design_space.py
# batch x 5
batch: 2

# generate-design: design-output-path
design-output-path: data/test/design.txt

# sim: idx
idx: 1

# generate-data: data-output-path
data-output-path: data/test/dataset.txt

# RL related
episode: 5
epsilon-start: 0.75
epsilon-end: 0.1
epsilon-decay: 10
capacity: 1000000
update-target-policy: 5
total-step: 64
early-stopping: 64
batch-size: 16
gamma: 0.9
learning-rate: 0.001
log: logs/dqn
search-round: 500
debug: True
