# Author: baichen318@gmail.com


### algorithm settings
algo:
  # design specifications
  # small-SonicBOOM
  # medium-SonicBOOM
  # large-SonicBOOM
  # mega-SonicBOOM
  # giga-SonicBOOM
  # Rocket
  design: "small-SonicBOOM"
  # the number of processes specifications
  # Currently, we use `1` as an example.
  # If user wants to experience high parallelism, multiple `gem5-research`
  # in `gem5-repo`should be duplicated.
  # In the released version, `num-parallel` should be `1`.
  num-parallel: 1
  # maximal episode specifications
  # we use a small `max-episode` to demonstrate the algorithm flow 
  max-episode: 1000
  # GPU utilization specifications
  # CPU is OK since our agent is small
  use-cuda: false
  # output root specifications
  output-root: logs
  # working mode specifications
  # train | test
  mode: train
  random-seed: 42
  train:
    # the batch size for training specifications
    sample-size: 8
    # the number of n-step evaluation specifications
    num-step: 9
    # softmax temperature specifications to encourage exploration
    temperature: 10
    # learning rate specifications
    learning-rate: 0.001
    # reward discount specifications
    gamma: 0.99
    # coefficient of generalized advantage estimator (GAE)
    lambda: 0.95
    # coefficient specifications between two critical loss components
    beta: 0.5
    # entropy coefficient specifications
    alpha: 1
    # clip gradient normalization
    clip-grad-norm: 0.5
    # the episode specifications begin to apply the envelope operator
    episode-when-apply-envelope-operator: 1000
    # the episode specifications to update the critic
    update-critic-episode: 100
  test:
    # search round
    max-search-round: 40
    # PPA preference scaling, we use small-SonicBOOM's preference as an example
    ppa-preference:
      - 0.083
      - 0.083
      - 0.834
    # RL model specifications
    rl-model: ~


### environment settings
env:
  ## VLSI flow settings
  vlsi:
    # chipyard research root path specifications
    # make sure chipyar-research is at the 'rl' branch
    # and it is an absolute path
    chipyard-research-root: /path/to/chipyard-research/
  ## simulation settings
  sim:
    # gem5 research pool root path specifications
    # it is an absolute path
    gem5-research-root: /path/to/gem5-repo/
    # an idx is set if a user specifies a specific gem5 repo.
    idx: 1
  ## calibration settings
  calib:
    # dataset specifications
    dataset: /path/to/towards-automated-risc-v-microarchitecture-design-with-reinforcement-learning/data/boom/boom.txt
    # simulation dataset specifications
    calib-dataset: /path/to/towards-automated-risc-v-microarchitecture-design-with-reinforcement-learning/data/boom/dataset.txt
    # PPA models specifications
    ppa-model: /path/to/towards-automated-risc-v-microarchitecture-design-with-reinforcement-learning/tools/models/boom
  ## benchmarks specifications
  benchmarks:
    - towers
    - vvadd
    - spmv
