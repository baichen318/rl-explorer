#!/bin/bash
# Author: baichen318@gmail.com

start=${start:-"1"}
end=${end:-"10"}
sim_script=${sim_script:-""}
file=${file:-""}

function set_env() {
    function handler() {
        exit 1
    }
    trap 'handler' SIGINT
}

function generate_compile_script() {
    echo "generating compilation script: " ${file}
cat > ${file} << EOF
#!/bin/bash
# Auto-generated by ${BASH_SOURCE[0]}

arr=\`seq ${start} ${end}\`
for idx in \${arr[@]}
do
    echo compiling \${idx}
    soc_name=Boom\${idx}Config
    make MACROCOMPILER_MODE='-l vlsi/hammer/src/hammer-vlsi/technology/asap7/sram-cache.json' CONFIG=\${soc_name}
    mkdir -p output/\${soc_name}
    mkdir -p \${soc_name}
    mv simv-chipyard-\${soc_name}* \${soc_name}
    cp ${sim_script} \${soc_name}
    sed -i 's/PATTERN/\${soc_name}/g' \${soc_name}/sim.sh
    sleep 60
done

EOF
}

while getopts "s:e:x:f:" arg
do
    case ${arg} in
        s)
            start=${OPTARG}
            ;;
        e)
            end=${OPTARG}
            ;;
        x)
            sim_script=${OPTARG}
            ;;
        f)
            file=${OPTARG}
            ;;
        *)
            echo "[ERROR]: not implemented."
            exit
            ;;
    esac
done

set_env
generate_compile_script
